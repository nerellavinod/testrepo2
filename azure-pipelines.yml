trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'mycontainerapp'
  acrName: 'testexampleregistryvin'
  DeploymentPool: "Mare Nectaris"
  Container: "ukhydrographicoffice/terraform-azure-powershell-unzip:1.9.2"
  Environment: "Devtest"
  DeploymentResourceGroupName: "testexample-resources-vin"
  DeploymentStorageAccountName: "teststorageaccount12345v"
  Location: "West Europe"
  TerraformDirectory: "MyFirstWebAPIProject/Deployment"

stages:
- stage: Build
  jobs:
  - job: BuildDockerImage
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '8.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: |
        ls -R
        ls /home/vsts/work/1/s/MyFirstWebAPIProject/Dockerfile
      displayName: 'List MyConsoleApp Contents'

    - script: |
        if ! command -v docker &> /dev/null
        then
            echo "Docker could not be found"
            exit 1
        else
            echo "Docker is installed"
            docker version
        fi
      displayName: 'Check Docker Installation and Version'

    - script: |
        docker build -t $(imageName):$(Build.BuildId) -f '$(Build.SourcesDirectory)/MyFirstWebAPIProject/Dockerfile' $(Build.SourcesDirectory)
      displayName: 'Build Docker Image'

    - script: |
        docker tag $(imageName):$(Build.BuildId) testexampleregistryvin.azurecr.io/$(imageName):latest
        docker tag $(imageName):$(Build.BuildId) testexampleregistryvin.azurecr.io/$(imageName):$(Build.BuildId)
      displayName: 'Tag Docker Image'

    # - task: AzureCLI@2
    #   inputs:
    #     azureSubscription: 'acrserviceconnectionmanuall'
    #     scriptType: 'bash'
    #     scriptLocation: 'inlineScript'
    #     inlineScript: |
    #       az acr login --name testexampleregistryvin
    #       docker push testexampleregistryvin.azurecr.io/$(imageName):latest
    #       docker push testexampleregistryvin.azurecr.io/$(imageName):$(Build.BuildId)
    #   displayName: 'Push Docker Image to ACR'

- stage: Deploy
  jobs:
  - job: TerraformDeployment
    steps:
    - checkout: self

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - task: AzureCLI@2
      inputs:
        azureSubscription: "acrserviceconnectionmanuall"
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az login
          az account set --subscription "c3d246d3-988a-45ae-ba70-f7faac1e2d0a"

    - task: PowerShell@2
      displayName: "terraformDeploy"
      name: TerraformDeploy
      inputs:
        targetType: filePath
        filePath: 'MyFirstWebAPIProject/Deployment/terraform_conditional_run.ps1'
        arguments: '-ResourceGroupName $(DeploymentResourceGroupName) -Location $(Location) -TerraformDirectory $(TerraformDirectory)'

    - task: AzureCLI@2
      inputs:
        azureSubscription: "acrserviceconnectionmanuall"
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az --version