# stages:
# - stage: TerraformStageStart
#   jobs:
#   - job: Terraform
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - checkout: self

#     - task: UsePythonVersion@0
#       inputs:
#         versionSpec: '3.x'
#         addToPath: true

#     - task: AzureCLI@2
#       inputs:
#         azureSubscription: 'acrserviceconnectionmanuall'
#         scriptType: 'pscore'
#         scriptLocation: 'inlineScript'
#         inlineScript: |
#           pwsh terraform_conditional_run.ps1

parameters:
  - name: ContinueEvenIfResourcesAreGettingDestroyed
    type: boolean
    default: false
  - name: AzureSubscription
    type: string

jobs:
- job: Terraform
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self

  - task: PowerShell@2
    displayName: "terraform $(Environment) deploy"
    name: TerraformDeploy
    inputs:
      targetType: filePath
      filePath: '$(Pipeline.Workspace)/terraformartifact/terraform_conditional_run.ps1'
      arguments: '-deploymentResourceGroupName $(DeploymentResourceGroupName) -deploymentStorageAccountName $(DeploymentStorageAccountName) -workSpace $(Environment) -continueEvenIfResourcesAreGettingDestroyed ${{ parameters.ContinueEvenIfResourcesAreGettingDestroyed }} -terraformJsonOutputFile $(Pipeline.Workspace)/terraformartifact/terraform_output.json'